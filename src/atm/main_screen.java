/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package atm;


import connection.dbConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import java.util.Properties;
import java.util.*;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.UIManager;
/**
 *
 * @author GOVIND SINGLA
 */
public class main_screen extends javax.swing.JFrame {
    JTextField text;
    int balance;
    String pin;
     String otp,new_pin;
    boolean pin_change = false, entry = false,pin_changed = false,confirm_pin = false, withdrawal = false,withdrawl_success = false;
  boolean details = false;
   
    public main_screen() {
       
            
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        one = new javax.swing.JButton();
        foue = new javax.swing.JButton();
        seven = new javax.swing.JButton();
        eight = new javax.swing.JButton();
        five = new javax.swing.JButton();
        two = new javax.swing.JButton();
        six = new javax.swing.JButton();
        nine = new javax.swing.JButton();
        three = new javax.swing.JButton();
        zero = new javax.swing.JButton();
        withdraw = new javax.swing.JButton();
        change_pin = new javax.swing.JButton();
        enter = new javax.swing.JButton();
        profile = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        screen = new javax.swing.JPanel();
        middle = new javax.swing.JLabel();
        upper = new javax.swing.JLabel();
        lower = new javax.swing.JTextField();
        receipt = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        date = new javax.swing.JLabel();
        trans_no = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        card_number = new javax.swing.JLabel();
        process = new javax.swing.JLabel();
        profile_vi = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        father_name = new javax.swing.JLabel();
        requesed_amount = new javax.swing.JLabel();
        ifsc = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        total_amount = new javax.swing.JLabel();
        balancee = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1086, 710));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        one.setBackground(new java.awt.Color(153, 153, 153));
        one.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        one.setForeground(new java.awt.Color(0, 0, 0));
        one.setMnemonic('K');
        one.setText("1");
        one.setFocusable(false);
        one.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneActionPerformed(evt);
            }
        });

        foue.setBackground(new java.awt.Color(153, 153, 153));
        foue.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        foue.setForeground(new java.awt.Color(0, 0, 0));
        foue.setText("4");
        foue.setFocusable(false);
        foue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foueActionPerformed(evt);
            }
        });

        seven.setBackground(new java.awt.Color(153, 153, 153));
        seven.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        seven.setForeground(new java.awt.Color(0, 0, 0));
        seven.setText("7");
        seven.setFocusable(false);
        seven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sevenActionPerformed(evt);
            }
        });

        eight.setBackground(new java.awt.Color(153, 153, 153));
        eight.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        eight.setForeground(new java.awt.Color(0, 0, 0));
        eight.setText("8");
        eight.setFocusable(false);
        eight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eightActionPerformed(evt);
            }
        });

        five.setBackground(new java.awt.Color(153, 153, 153));
        five.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        five.setForeground(new java.awt.Color(0, 0, 0));
        five.setText("5");
        five.setFocusable(false);
        five.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveActionPerformed(evt);
            }
        });

        two.setBackground(new java.awt.Color(153, 153, 153));
        two.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        two.setForeground(new java.awt.Color(0, 0, 0));
        two.setText("2");
        two.setFocusable(false);
        two.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoActionPerformed(evt);
            }
        });

        six.setBackground(new java.awt.Color(153, 153, 153));
        six.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        six.setForeground(new java.awt.Color(0, 0, 0));
        six.setText("6");
        six.setFocusable(false);
        six.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixActionPerformed(evt);
            }
        });

        nine.setBackground(new java.awt.Color(153, 153, 153));
        nine.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        nine.setForeground(new java.awt.Color(0, 0, 0));
        nine.setText("9");
        nine.setFocusable(false);
        nine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nineActionPerformed(evt);
            }
        });

        three.setBackground(new java.awt.Color(153, 153, 153));
        three.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        three.setForeground(new java.awt.Color(0, 0, 0));
        three.setText("3");
        three.setFocusable(false);
        three.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeActionPerformed(evt);
            }
        });

        zero.setBackground(new java.awt.Color(153, 153, 153));
        zero.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        zero.setForeground(new java.awt.Color(0, 0, 0));
        zero.setText("0");
        zero.setFocusable(false);
        zero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zeroActionPerformed(evt);
            }
        });

        withdraw.setBackground(new java.awt.Color(153, 153, 153));
        withdraw.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        withdraw.setForeground(new java.awt.Color(0, 0, 0));
        withdraw.setIcon(new javax.swing.ImageIcon(getClass().getResource("/atm/Webp.net-resizeimage.png"))); // NOI18N
        withdraw.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(102, 102, 102)));
        withdraw.setFocusable(false);
        withdraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withdrawActionPerformed(evt);
            }
        });

        change_pin.setBackground(new java.awt.Color(153, 153, 153));
        change_pin.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        change_pin.setForeground(new java.awt.Color(0, 0, 0));
        change_pin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/atm/Webp.net-resizeimage.png"))); // NOI18N
        change_pin.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(102, 102, 102)));
        change_pin.setFocusable(false);
        change_pin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                change_pinActionPerformed(evt);
            }
        });

        enter.setBackground(new java.awt.Color(0, 204, 51));
        enter.setFont(new java.awt.Font("Arial", 1, 21)); // NOI18N
        enter.setForeground(new java.awt.Color(0, 0, 0));
        enter.setMnemonic('\n');
        enter.setText("Enter");
        enter.setToolTipText("");
        enter.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 100, 0), 3, true));
        enter.setFocusable(false);
        enter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterActionPerformed(evt);
            }
        });
        enter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                enterKeyPressed(evt);
            }
        });

        profile.setBackground(new java.awt.Color(153, 153, 153));
        profile.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        profile.setForeground(new java.awt.Color(0, 0, 0));
        profile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/atm/Webp.net-resizeimage_1.png"))); // NOI18N
        profile.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(102, 102, 102)));
        profile.setFocusable(false);
        profile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileActionPerformed(evt);
            }
        });

        exit.setBackground(new java.awt.Color(153, 153, 153));
        exit.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        exit.setForeground(new java.awt.Color(0, 0, 0));
        exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/atm/Webp.net-resizeimage_1.png"))); // NOI18N
        exit.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(102, 102, 102)));
        exit.setFocusable(false);
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        clear.setBackground(new java.awt.Color(255, 255, 0));
        clear.setFont(new java.awt.Font("Arial", 1, 21)); // NOI18N
        clear.setForeground(new java.awt.Color(0, 0, 0));
        clear.setText("Clear");
        clear.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 0), 3, true));
        clear.setFocusable(false);
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        cancel.setBackground(new java.awt.Color(255, 0, 0));
        cancel.setFont(new java.awt.Font("Arial", 1, 21)); // NOI18N
        cancel.setForeground(new java.awt.Color(0, 0, 0));
        cancel.setText("Cancel");
        cancel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 51, 0), 3, true));
        cancel.setFocusable(false);
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        screen.setBackground(new java.awt.Color(0, 0, 255));
        screen.setMaximumSize(new java.awt.Dimension(336, 200));
        screen.setMinimumSize(new java.awt.Dimension(336, 200));
        screen.setLayout(null);

        middle.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        middle.setForeground(new java.awt.Color(255, 255, 255));
        middle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        middle.setText("Enter your PIN");
        screen.add(middle);
        middle.setBounds(18, 80, 280, 26);

        upper.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        upper.setForeground(new java.awt.Color(255, 255, 255));
        upper.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        upper.setText("XYZ Bank");
        screen.add(upper);
        upper.setBounds(18, 20, 280, 26);

        lower.setBackground(new java.awt.Color(0, 0, 255));
        lower.setColumns(4);
        lower.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lower.setForeground(new java.awt.Color(255, 255, 255));
        lower.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lower.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lowerKeyPressed(evt);
            }
        });
        screen.add(lower);
        lower.setBounds(90, 140, 140, 34);

        receipt.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("DETAILS");

        date.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        date.setForeground(new java.awt.Color(0, 0, 0));
        date.setText("19-10-2020        21:35:20         ");

        trans_no.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        trans_no.setForeground(new java.awt.Color(0, 0, 0));
        trans_no.setText("00000");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("CARD NUMBER");

        card_number.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        card_number.setForeground(new java.awt.Color(0, 0, 0));
        card_number.setText("0000");

        process.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        process.setForeground(new java.awt.Color(0, 0, 0));
        process.setText("TRANSACTION");

        profile_vi.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        profile_vi.setForeground(new java.awt.Color(0, 0, 0));
        profile_vi.setText("WITHDRAWL CHECK");

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("NAME");

        father_name.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        father_name.setForeground(new java.awt.Color(0, 0, 0));
        father_name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        father_name.setText("REQUESTED AMOUNT");

        requesed_amount.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        requesed_amount.setForeground(new java.awt.Color(0, 0, 0));
        requesed_amount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        requesed_amount.setText("Rs. 5000000");

        ifsc.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        ifsc.setForeground(new java.awt.Color(0, 0, 0));
        ifsc.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ifsc.setText("TOTAL AMOUNT");

        name.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        name.setForeground(new java.awt.Color(0, 0, 0));
        name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        name.setText("GOVIND SINGLA");

        jLabel14.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("BALANCE");

        jLabel16.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setText("------------------------------------------------------");

        jLabel17.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setText("------------------------------------------------------");

        jLabel18.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 0, 0));
        jLabel18.setText("------------------------------------------------------");

        total_amount.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        total_amount.setForeground(new java.awt.Color(0, 0, 0));
        total_amount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        total_amount.setText("Rs. 5000000");

        balancee.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        balancee.setForeground(new java.awt.Color(0, 0, 0));
        balancee.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        balancee.setText("Rs. 5000000");

        javax.swing.GroupLayout receiptLayout = new javax.swing.GroupLayout(receipt);
        receipt.setLayout(receiptLayout);
        receiptLayout.setHorizontalGroup(
            receiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(receiptLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(receiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, receiptLayout.createSequentialGroup()
                        .addGap(258, 258, 258)
                        .addComponent(name)
                        .addGap(39, 39, 39))
                    .addGroup(receiptLayout.createSequentialGroup()
                        .addGroup(receiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(receiptLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(receiptLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(receiptLayout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(trans_no, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(card_number, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(process, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(profile_vi)
                            .addComponent(jLabel8)
                            .addGroup(receiptLayout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(162, 162, 162)
                                .addComponent(balancee, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(receiptLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(receiptLayout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(receiptLayout.createSequentialGroup()
                                .addComponent(ifsc)
                                .addGap(86, 86, 86)
                                .addComponent(total_amount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(33, 33, 33))
                    .addGroup(receiptLayout.createSequentialGroup()
                        .addComponent(father_name)
                        .addGap(18, 18, 18)
                        .addComponent(requesed_amount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(33, 33, 33))))
        );
        receiptLayout.setVerticalGroup(
            receiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(receiptLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(trans_no, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(card_number, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(process, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(profile_vi, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(receiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(receiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(father_name, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(requesed_amount, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(receiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ifsc, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(total_amount, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(receiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(balancee, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(withdraw, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(change_pin, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(screen, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(zero, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(7, 7, 7)
                                    .addComponent(seven, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(eight, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(one, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(two, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(7, 7, 7)
                                    .addComponent(foue, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(50, 50, 50)
                                    .addComponent(five, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(six, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(three, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nine, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(profile, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enter, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                .addComponent(receipt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(withdraw, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(112, 112, 112)
                                .addComponent(change_pin, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(screen, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(one, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(two, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(three, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(39, 39, 39)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(foue, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(five, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(six, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(39, 39, 39)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(seven, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(eight, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nine, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(enter, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(39, 39, 39)
                                .addComponent(zero, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(profile, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(117, 117, 117)
                                .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(receipt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void oneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneActionPerformed
        if(lower.getText().length() < 4)
        {
            lower.setText(lower.getText() + "1");
        }
        
    }//GEN-LAST:event_oneActionPerformed

    private void foueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foueActionPerformed
       if(lower.getText().length() < 4)
        {
            lower.setText(lower.getText() + "4");
        }
    }//GEN-LAST:event_foueActionPerformed

    private void sevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sevenActionPerformed
       if(lower.getText().length() < 4)
        {
            lower.setText(lower.getText() + "7");
        }
    }//GEN-LAST:event_sevenActionPerformed

    private void eightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eightActionPerformed
        if(lower.getText().length() < 4)
        {
            lower.setText(lower.getText() + "8");
        }
    }//GEN-LAST:event_eightActionPerformed

    private void fiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveActionPerformed
         if(lower.getText().length() < 4)
        {
            lower.setText(lower.getText() + "5");
        }
    }//GEN-LAST:event_fiveActionPerformed

    private void twoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoActionPerformed
        if(lower.getText().length() < 4)
        {
            lower.setText(lower.getText() + "2");
        }
    }//GEN-LAST:event_twoActionPerformed

    private void sixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sixActionPerformed
      if(lower.getText().length() < 4)
        {
            lower.setText(lower.getText() + "6");
        }
    }//GEN-LAST:event_sixActionPerformed

    private void nineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nineActionPerformed
        if(lower.getText().length() < 4)
        {
            lower.setText(lower.getText() + "9");
        }
    }//GEN-LAST:event_nineActionPerformed

    private void threeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeActionPerformed
        if(lower.getText().length() < 4)
        {
            lower.setText(lower.getText() + "3");
        }
    }//GEN-LAST:event_threeActionPerformed

    private void zeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zeroActionPerformed
         if(lower.getText().length() < 4)
        {
            lower.setText(lower.getText() + "0");
        }
    }//GEN-LAST:event_zeroActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       
        upper.setText("XYZ Bank");
       middle.setText("Enter your PIN"); 
       lower.setText("");
       receipt.setVisible(false);  
       jPanel1.setSize(1330, 669);
       entry = true;
    }//GEN-LAST:event_formWindowOpened

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
       lower.setText("");
    }//GEN-LAST:event_clearActionPerformed

    private void enterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterActionPerformed
       if(upper.getText().equals("XYZ Bank"))
       {
               
        try(
                    
                        Connection con=dbConnection.getConnect();
                        PreparedStatement ps=con.prepareStatement("select * from atm2 where pin = ?");
                        
              ) 
        {
                        String s = lower.getText();
                        pin = s;
                         ps.setString(1, s);
                         ResultSet rs = ps.executeQuery();
                        if(rs.next())
                        {
                            String name = rs.getString("name");
                            balance = rs.getInt("balance");
                            entry =false;
                            pin_change = false;
                             pin_changed = false;
                             confirm_pin = false;
                             withdrawal = false;
                             withdrawl_success = false;
                            details = false;
                           upper.setText("Welcome " + name);
                          middle.setText("Balance = " + balance);
                           lower.setVisible(false);
                           lower.setText("");
                          withdraw.setIcon(null);
                          withdraw.setText("withdraw");
                          profile.setIcon(null);
                          profile.setText("profile");
                          change_pin.setIcon(null);
                          change_pin.setText("change pin");
                          exit.setIcon(null);
                          exit.setText("Exit");
                          screen.setSize(350, 200);
                        }
                        else if("".equals(s))
                        {
                            
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(null, "error login");
                            lower.setText("");
                        }
                        
        } 
        catch (Exception e)
        {
                    
        }
       }
        else if(entry)
        {
                try (
                                Connection con=dbConnection.getConnect();
                                PreparedStatement ps=con.prepareStatement("select * from atm2 where pin = ?"); 
                        
                        )
                {
                       ps.setString(1, pin); 
                        ResultSet rs=ps.executeQuery();
                        if(rs.next())
                        {
                            String name = rs.getString("name");
                         entry =false;
                        pin_change = false;
                         pin_changed = false;
                         confirm_pin = false;
                         withdrawal = false;
                         withdrawl_success = false;
                        details = false;
                       upper.setText("Welcome "+ name);
                      middle.setText("Balance = " + balance);
                       lower.setVisible(false);
                       lower.setText(""); 
                      withdraw.setIcon(null);
                      withdraw.setText("withdraw");
                      profile.setIcon(null);
                      profile.setText("profile");
                      change_pin.setIcon(null);
                      change_pin.setText("change pin");
                      exit.setIcon(null);
                      exit.setText("Exit");
                      receipt.setVisible(false);
                      screen.setSize(350, 200);
                        }
                } 
                catch (Exception e) 
                {
                }
               
        }
        else if(pin_change)
        {
            try {
                 if(lower.getText().equals(otp))
            {
                      pin_changed = true;
                        entry =false;
                        pin_change = false;
                         confirm_pin = false;
                         withdrawal = false;
                         withdrawl_success = false;
                        details = false;
                        middle.setText("Enter new PIN");
                        lower.setVisible(true);
                        lower.setText("");
            } 
                  else if("".equals(lower.getText()))
                        {
                            
                        }
                 else
                        {
                            JOptionPane.showMessageDialog(null, "wrong otp");
                            lower.setText("");
                        }
              
            } catch (Exception e) {
               
            }
           
                
        }
        else if(pin_changed)
        {
            
            try {
                new_pin = lower.getText();
                if(new_pin.length() == 4 && !new_pin.equals(pin)) 
                {
                         entry =false;
                        pin_change = false;
                         pin_changed = false;
                         withdrawal = false;
                         withdrawl_success = false;
                        details = false;
                        confirm_pin = true;
                         upper.setText("");
                        middle.setText("Confirm your PIN");
                        lower.setText("");
                }
                else if(new_pin.equals(pin))
                {
                            JOptionPane.showMessageDialog(null, "New PIN cannot be equal to Old PIN");
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "PIN should be 4 digit");
                }
               
            } catch (Exception e) {
            }
                
        }
        else if(confirm_pin)
        {
            try {
                if(lower.getText().equals(new_pin)) 
            {
                try(
                                  Connection con=dbConnection.getConnect();
                                  PreparedStatement ps=con.prepareStatement("update atm2 set pin = ?  where pin = ?");
                      ) 
                {
                    ps.setString(1, new_pin);
                     ps.setString(2, pin);
                     ps.executeUpdate();
                     pin = new_pin;
                     pin_change = false;
                    pin_changed = false;
                    confirm_pin = false;
                    withdrawal = false;
                    withdrawl_success = false;
                    details = false;
                  entry = true;
                  middle.setText("PIN Changed");
                  lower.setVisible(false);
                  lower.setText("");
                } catch (Exception e) {
                }
                
            }
                
                 else if("".equals(lower.getText()))
                        {
                            
                        }
                 
            else
            {
                JOptionPane.showMessageDialog(null, "PIN didn't matched");
                lower.setText("");
            }
             
            } catch (Exception e) {
            }
            
        }
        else if(withdrawal)
        {
                try {
                
           
                if(Integer.parseInt(lower.getText()) <= balance)
                { 
                    balance -= Integer.parseInt(lower.getText());
                        try(
                                         Connection con=dbConnection.getConnect();
                                        PreparedStatement ps=con.prepareStatement("update atm2 set balance = ?  where pin = ?");
                                        PreparedStatement ps2=con.prepareStatement("select * from atm2 where pin = ?");
                              ) 
                        {
                                receipt.setVisible(true); 
                                ps.setInt(1, balance);
                                ps.setString(2, pin);
                                ps2.setString(1, pin); 
                                ps.executeUpdate();
                                ResultSet rs = ps2.executeQuery();
                                if(rs.next())
                                {
                                String get_name = rs.getString("name");
                                String acc_no = rs.getString("accno");
                                acc_no = acc_no.substring(7,11);
                                upper.setText("withdrawl success");
                                middle.setText("balance : Rs. " +  (balance));
                                requesed_amount.setText("Rs. "+lower.getText()); 
                                total_amount.setText("Rs. "+lower.getText());
                                father_name.setText("REQUESTED AMOUNT"); 
                                ifsc.setText("TOTAL AMOUNT"); 
                                process.setText("TRANSACTION");
                                profile_vi.setText("WITHDRAWL CHECK");
                                   balancee.setText("Rs. "+String.valueOf(balance));
                                DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd-MM-yyyy        HH:mm:ss");
                                LocalDateTime now = LocalDateTime.now();
                                Random rand = new Random();
                                String trans = "";
                                while(trans.length() != 15)
                                {
                                        int i = rand.nextInt(9);
                                        trans += String.valueOf(i);
                                }
                                date.setText(dtf.format(now));
                                name.setText(get_name);  
                                trans_no.setText(trans);
                                card_number.setText("XXXXXXX" + acc_no);
                                jPanel1.setSize(1330, 669);
                                receipt.setSize(500, 642);
                                lower.setVisible(false); 
                                
                                entry = true;
                                pin_change = false;
                                 pin_changed = false;
                                 confirm_pin = false;
                                 withdrawal = false;
                                 withdrawl_success = false;
                                details = false;
                                lower.setText("");
                                }
                        } 
                        catch (Exception e) 
                        {
                        }   
                }
                 else
                { 
                        pin_change = false;
                         pin_changed = false;
                         confirm_pin = false;
                         withdrawal = false;
                         withdrawl_success = false;
                        details = false;
                        upper.setText("Sorry not Sufficient balance");
                        middle.setText("balance : Rs. " + (balance));
                        lower.setVisible(false);
                        entry = true;
                }
                 } 
                catch (Exception e) 
                {
                 }
               
                
        }
        
    }//GEN-LAST:event_enterActionPerformed

    private void change_pinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_change_pinActionPerformed
        if(!pin_change && !entry && !pin_changed  && !confirm_pin && !withdrawal && !withdrawl_success && !details)
        {
            
                    upper.setText("Change PIN");
                    middle.setText("Enter the OTP sent");
                    lower.setVisible(true);
                    lower.setText("");
                    pin_change = true;
                    entry =false;
                     pin_changed = false;
                     confirm_pin = false;
                     withdrawal = false;
                     withdrawl_success = false;
                    details = false;
                    
         // Recipient's email ID needs to be mentioned.
        String to = "singlagovind794@gmail.com";

        // Sender's email ID needs to be mentioned
        String from = "singlagovind865@gmail.com";

        // Assuming you are sending email from through gmails smtp
        String host = "smtp.gmail.com";

        // Get system properties
        Properties properties = System.getProperties();

        // Setup mail server
        properties.put("mail.smtp.host", host);
        properties.put("mail.smtp.port", "465");
        properties.put("mail.smtp.ssl.enable", "true");
        properties.put("mail.smtp.auth", "true");

        // Get the Session object.// and pass username and password
        Session session = Session.getInstance(properties, new javax.mail.Authenticator() {

            protected PasswordAuthentication getPasswordAuthentication() {

                return new PasswordAuthentication("singlagovind865@gmail.com", "KrishnaJi798");

            }

        });

        // Used to debug SMTP issues
        session.setDebug(true);

        try {
            // Create a default MimeMessage object.
            MimeMessage message = new MimeMessage(session);

            // Set From: header field of the header.
            message.setFrom(new InternetAddress(from));

            
            message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));

           
            message.setSubject("This is the Subject Line!");
            Random rand=new Random();
            otp = "";
             while(otp.length() != 4)
             {
                        String rand_otp_2 = String.valueOf(rand.nextInt(9));
                        otp +=  rand_otp_2;
             }
            
            System.out.println(otp);
           
            message.setText(otp);

            Transport.send(message);
        } catch (MessagingException mex) {
            mex.printStackTrace();
        }

                  
        }
     
    }//GEN-LAST:event_change_pinActionPerformed

    private void withdrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withdrawActionPerformed
            if(!pin_change && !entry && !pin_changed  && !confirm_pin && !withdrawal && !withdrawl_success && !details)
            {
                    upper.setText("Withdraw Money");
                    middle.setText("Enter the amount");
                    lower.setVisible(true);
                    lower.setText("");
                    withdrawal = true;
                    entry =false;
                    pin_change = false;
                     pin_changed = false;
                     confirm_pin = false;
                     withdrawl_success = false;
                    details = false;
             }
    }//GEN-LAST:event_withdrawActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
       if(pin_change || withdrawal || pin_changed || confirm_pin || details)
        {
                entry =false;
                pin_change = false;
                 pin_changed = false;
                 confirm_pin = false;
                 withdrawal = false;
                 withdrawl_success = false;
                details = false;
               upper.setText("Welcome Govind");
              middle.setText("Balance = " + balance);
               lower.setVisible(false);
               lower.setText("");
              withdraw.setIcon(null);
              withdraw.setText("withdraw");
              profile.setIcon(null);
              profile.setText("profile");
              change_pin.setIcon(null);
              change_pin.setText("change pin");
              exit.setIcon(null);
              exit.setText("Exit");
              screen.setSize(350, 200);
              receipt.setVisible(false);
        }
       
    }//GEN-LAST:event_cancelActionPerformed

    private void profileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileActionPerformed
       if(!pin_change && !entry && !pin_changed  && !confirm_pin && !withdrawal && !withdrawl_success && !details)
       {
           try (
                        Connection con=dbConnection.getConnect();
                        PreparedStatement ps=con.prepareStatement("select * from atm2 where pin = ?");
                 )
           { 
               ps.setString(1, pin);
               ResultSet rs=ps.executeQuery();
               if(rs.next())
               {
                   String getname=rs.getString("name"); 
                  String acno = rs.getString("accno");
                  acno = acno.substring(7,11);
                  String fname = rs.getString("fathername");
                  String ifscs = rs.getString("ifsc");
                  String bal = rs.getString("balance");
                         details = true; 
                        entry =false;
                         pin_change = false;
                         pin_changed = false;
                         confirm_pin = false;
                         withdrawal = false;
                          withdrawl_success = false;
                        upper.setText("Details");
                        middle.setText("Name - " + getname);
                        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd-MM-yyyy        HH:mm:ss");
                        LocalDateTime now = LocalDateTime.now();
                         date.setText(dtf.format(now));
                        card_number.setText("XXXXXXX" + acno);
                        requesed_amount.setText(fname);
                        balancee.setText(bal);
                        lower.setVisible(false);
                        receipt.setVisible(true);
                        name.setText(getname);
                         father_name.setText("FATHER'S NAME"); 
                         ifsc.setText("IFSC"); 
                         total_amount.setText(ifscs);
                         process.setText("PROCESS");
                         profile_vi.setText("PROFILE VIEW");
                         Random rand=new Random();
                         String trans = "";
                                while(trans.length() != 15)
                                {
                                        int i = rand.nextInt(9);
                                        trans += String.valueOf(i);
                                }
                         trans_no.setText(trans);
               }
                   
           } 
           catch (Exception e) 
           {
           }
            
       }
    }//GEN-LAST:event_profileActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        if( !pin_change && !entry && !pin_changed  && !confirm_pin && !withdrawal && !withdrawl_success && !details)
        {
                upper.setText("XYZ Bank");
                middle.setText("Enter your PIN");
                change_pin.setIcon(new ImageIcon("C:\\Users\\GOVIND SINGLA\\Documents\\NetBeansProjects\\ATM\\src\\atm\\Webp.net-resizeimage.png"));
                change_pin.setText("");
               withdraw.setText("");
                withdraw.setIcon(new ImageIcon("C:\\Users\\GOVIND SINGLA\\Documents\\NetBeansProjects\\ATM\\src\\atm\\Webp.net-resizeimage.png"));
                exit.setText("");
                exit.setIcon(new ImageIcon("C:\\Users\\GOVIND SINGLA\\Documents\\NetBeansProjects\\ATM\\src\\atm\\Webp.net-resizeimage_1.png"));
                profile.setText("");
                profile.setIcon(new ImageIcon("C:\\Users\\GOVIND SINGLA\\Documents\\NetBeansProjects\\ATM\\src\\atm\\Webp.net-resizeimage_1.png"));
                lower.setVisible(true);
                lower.setText("");   
                entry =true;
                pin_change = false;
                 pin_changed = false;
                 confirm_pin = false;
                 withdrawal = false;
                 withdrawl_success = false;
                details = false;
        }
                  
    }//GEN-LAST:event_exitActionPerformed

    private void lowerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lowerKeyPressed

    }//GEN-LAST:event_lowerKeyPressed

    private void enterKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_enterKeyPressed
             
    }//GEN-LAST:event_enterKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main_screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main_screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main_screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main_screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main_screen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel balancee;
    private javax.swing.JButton cancel;
    private javax.swing.JLabel card_number;
    private javax.swing.JButton change_pin;
    private javax.swing.JButton clear;
    private javax.swing.JLabel date;
    private javax.swing.JButton eight;
    private javax.swing.JButton enter;
    private javax.swing.JButton exit;
    private javax.swing.JLabel father_name;
    private javax.swing.JButton five;
    private javax.swing.JButton foue;
    private javax.swing.JLabel ifsc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField lower;
    private javax.swing.JLabel middle;
    private javax.swing.JLabel name;
    private javax.swing.JButton nine;
    private javax.swing.JButton one;
    private javax.swing.JLabel process;
    private javax.swing.JButton profile;
    private javax.swing.JLabel profile_vi;
    private javax.swing.JPanel receipt;
    private javax.swing.JLabel requesed_amount;
    private javax.swing.JPanel screen;
    private javax.swing.JButton seven;
    private javax.swing.JButton six;
    private javax.swing.JButton three;
    private javax.swing.JLabel total_amount;
    private javax.swing.JLabel trans_no;
    private javax.swing.JButton two;
    private javax.swing.JLabel upper;
    private javax.swing.JButton withdraw;
    private javax.swing.JButton zero;
    // End of variables declaration//GEN-END:variables
}
